{"version":3,"file":"angular-preflight.component.js","sourceRoot":"","sources":["../.tmp/angular-preflight.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;IAsBnE,mCACU,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;0BAdC,CAAC;yBAEF,GAAG;wBAEJ,CAAC,CAAC;wBAEF,EAAE;0BAEA,CAAC,CAAC;KAOtB;IAEL,4CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAExC,IAAI,CAAC;YACH,IAAI,OAAO,GAAgB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;YACjD,IAAI,KAAK,GAAwB,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAElE,OAAO,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YAE5C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAkB,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAoB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEvE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;YAE5F,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAU,CAAC;YAEjC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzC,IAAI,KAAK,GAAW,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAErE,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAEvC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEvC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;aACpC;SACF;QAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;YACb,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;SACxC;KACF;;gBAtDF,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,+ZAA+Z;oBACza,MAAM,EAAE,CAAC,w2CAAw2C,CAAC;iBACn3C;;;gBANkC,UAAU;;;+BAQ1C,KAAK,SAAC,OAAO;8BAEb,KAAK,SAAC,OAAO;6BAEb,KAAK,SAAC,QAAQ;6BAEd,KAAK,SAAC,MAAM;+BAEZ,KAAK,SAAC,OAAO;;oCAhBhB;;SAOa,yBAAyB","sourcesContent":["import { Component, OnInit, Input, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'ui-preflight',\n  template: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" [attr.width]=\\\"lineWidth\\\" [attr.height]=\\\"canvasHeight\\\" [attr.viewBox]=\\\"'0 0 ' + lineWidth + ' ' + canvasHeight\\\"><g><rect *ngFor=\\\"let line of lines; index as i\\\" x=\\\"0\\\" [attr.y]=\\\"((lineSize + lineHeight) * i) + 'px'\\\" [attr.width]=\\\"line + 'px'\\\" [attr.height]=\\\"lineSize + 'px'\\\" [attr.rx]=\\\"(lineSize / 2) + 'px'\\\" [attr.ry]=\\\"(lineSize / 2) + 'px'\\\"/></g></svg>\",\n  styles: [\":host{display:inline-block;clear:both}:host svg{float:left;fill:currentColor;fill-rule:evenodd}:host svg rect{animation-name:PreflightLinePulse;animation-duration:1s;animation-timing-function:ease-in;animation-iteration-count:infinite;animation-direction:alternate;fill-opacity:0.06}:host svg rect:nth-child(n+2){animation-delay:.3s}:host svg rect:nth-child(n+3){animation-delay:.6s}:host svg rect:nth-child(n+4){animation-delay:.9s}:host svg rect:nth-child(n+5){animation-delay:1.2s}:host svg rect:nth-child(n+6){animation-delay:1.5s}:host svg rect:nth-child(n+7){animation-delay:1.8s}:host svg rect:nth-child(n+8){animation-delay:2.1s}:host svg rect:nth-child(n+9){animation-delay:2.4s}:host svg rect:nth-child(n+10){animation-delay:2.7s}:host svg rect:nth-child(n+11){animation-delay:3s}:host svg rect:nth-child(n+12){animation-delay:3.3s}:host svg rect:nth-child(n+13){animation-delay:3.6s}:host svg rect:nth-child(n+14){animation-delay:3.9s}:host svg rect:nth-child(n+15){animation-delay:4.2s}:host svg rect:nth-child(n+16){animation-delay:4.5s}:host svg rect:nth-child(n+17){animation-delay:4.8s}:host svg rect:nth-child(n+18){animation-delay:5.1s}:host svg rect:nth-child(n+19){animation-delay:5.4s}:host svg rect:nth-child(n+20){animation-delay:5.7s}:host svg rect:nth-child(n+21){animation-delay:6s}@keyframes PreflightLinePulse{0%{fill-opacity:0.06}100%{fill-opacity:0.2}}\"]\n})\nexport class AngularPreflightComponent implements OnInit {\n  @Input('lines')\n  public linesCount: any = 1;\n  @Input('width')\n  public lineWidth: any = 160;\n  @Input('height')\n  public lineSize: any = -1;\n  @Input('diff')\n  public lineDiff: any = 40;\n  @Input('space')\n  public lineHeight: any = -1;\n\n  public lines: Array<number>;\n  public canvasHeight: number;\n\n  constructor(\n    private el: ElementRef\n  ) { }\n\n  ngOnInit() {\n    this.linesCount = parseInt(this.linesCount);\n    this.lineWidth = parseInt(this.lineWidth);\n    this.lineDiff = parseInt(this.lineDiff);\n\n    try {\n      let element: HTMLElement = this.el.nativeElement;\n      let style: CSSStyleDeclaration = window.getComputedStyle(element);\n\n      element.setAttribute('aria-hidden', 'true');\n\n      this.lineSize = parseInt(style.fontSize as string);\n      this.lineHeight = parseInt(style.lineHeight as string) - this.lineSize;\n\n      this.canvasHeight = ((this.lineSize + this.lineHeight) * this.linesCount) - this.lineHeight;\n\n      this.lines = new Array<number>();\n\n      for (let i = 0; i < this.linesCount; i++) {\n        let width: number = this.lineWidth - (Math.random() * this.lineDiff);\n\n        width -= Math.random() * this.lineDiff;\n\n        width = Math.max(width, this.lineSize);\n\n        this.lines.push(Math.round(width));\n      }\n    } catch (err) {\n      console.warn('Angular Preflight', err);\n    }\n  }\n}\n"]}